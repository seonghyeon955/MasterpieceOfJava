다음 두개의 static을 가진 ArrayUtility2 클래스를 만들어 보자. ArrayUtility2 클래스를 이용하는 테스트용 프로그램도 함께 작성하라.

static int[] concat(int [] sq, int [] s2); //s1과 s2를 연결한 새로운 배열 리턴
static int[] remove(int [] sq, int [] s2); //s1과 s2 배열의 숫자를 모두 삭제한 새로운 배열 리턴 

풀이)

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

/*
 다음 두개의 static을 가진 ArrayUtility2 클래스를 만들어 보자. ArrayUtility2 클래스를 이용하는 테스트용 프로그램도 함께 작성하라.

static int[] concat(int [] s1, int [] s2); //s1과 s2를 연결한 새로운 배열 리턴
static int[] remove(int [] s1, int [] s2); //s1에서 s2 배열의 숫자를 모두 삭제한 새로운 배열 리턴 

 
  */
public class q4_ArrayUtiltity2 {
	static int[] concat(int[]s1, int[]s2) {
		int sumLength = s1.length + s2.length;
		int result[] = new int[sumLength];
		for(int i=0; i<sumLength; i++) {
			if(i<s1.length) result[i] = s1[i];
			else if(i>=s1.length) {result[i] = s2[i-s1.length];} //같은 부분이 없으면 중간이 붕 뜨게 됨.
		}
			return result;
	}
	
	static int[] remove(int[]s1, int[]s2) {
		//int[]s1, int[]s2의 중복값이 있을경우 
		List<Integer> result = new ArrayList<>();
		
		//Arrays.sort(s1); // Collection.sort(); : list 정렬 
		//Arrays.sort(s2);
		
		for(int i=0; i<s1.length; i++) {
			result.add(s1[i]);
			for(int k=0; k<s2.length; k++) {
				if(result.get(result.size()-1) == s2[k]) {
					result.remove(result.size()-1);
					break;
				}
			}
		}//for end
		int[] last = new int[result.size()];
		for(int i=0;i<last.length; i++) {
			last[i] = result.get(i);
		}
		return last;
	}
	
	
	
	public static void main(String[]args) {
		int num1[] = {1,2,2,3,4,5,6,7,8,9,10};
		int num2[] = {1,2,8,9,5};
		
		
		System.out.print("num1[] 출력 : "); 
			for(int i=0; i<num1.length; i++) {
				System.out.print(num1[i] + " ");
			}
		System.out.println();
		
		System.out.print("num2[] 출력 : ");
			for(int i=0; i<num2.length; i++) {
				System.out.print(num2[i] + " ");
			}
		System.out.println();
		System.out.print("concat() >> ");
		
		int result[] = q4_ArrayUtiltity2.concat(num1, num2);
		for(int i=0; i<result.length; i++) {
			System.out.print(result[i] + " ");
		}
		System.out.println();
		
		System.out.print("remove() >>");
		result = q4_ArrayUtiltity2.remove(num1, num2);
		for(int i=0; i<result.length; i++) {
			System.out.print(result[i] + " ");
		}
		
	}
	
}
